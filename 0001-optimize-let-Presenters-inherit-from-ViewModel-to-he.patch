From c47a045d1ab1b3be0e12e3d8197c46d1062f768f Mon Sep 17 00:00:00 2001
From: lzl <2233788867@qq.com>
Date: Thu, 9 Jan 2025 22:24:58 +0800
Subject: [PATCH] optimize: let Presenters inherit from ViewModel to help
 manage data of pages

---
 .../videos/presenter/FeedbackPresenter.java   | 19 +++--
 .../videos/presenter/IFeedbackPresenter.java  |  5 +-
 .../videos/presenter/IVideoPresenter.java     |  5 +-
 .../presenter/LocalSearchedVideosPresenter.kt | 21 ++++--
 .../presenter/LocalVideoListPresenter.kt      | 65 +++++++++-------
 .../videos/presenter/Presenter.java           | 33 +++++++-
 .../videos/presenter/VideoMovePresenter.kt    | 15 ++--
 .../videos/presenter/VideoPresenter.java      | 16 ++--
 .../view/activity/FeedbackActivity.java       |  4 +-
 .../videos/view/activity/VideoActivity.java   |  4 +-
 .../fragment/LocalSearchedVideosFragment.kt   | 61 ++++++++-------
 .../view/fragment/LocalVideoListFragment.kt   | 75 ++++++++++---------
 .../view/fragment/LocalVideosFragment.kt      | 39 +++++-----
 .../videos/view/fragment/VideoMoveFragment.kt | 30 ++++----
 14 files changed, 241 insertions(+), 151 deletions(-)

diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/FeedbackPresenter.java b/app/src/main/java/com/liuzhenlin/videos/presenter/FeedbackPresenter.java
index a1b3107..714c946 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/FeedbackPresenter.java
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/FeedbackPresenter.java
@@ -43,16 +43,21 @@ class FeedbackPresenter extends Presenter<IFeedbackView> implements IFeedbackPre
     @Override
     public void attachToView(@NonNull IFeedbackView view) {
         super.attachToView(view);
-        mFeedbackRepository = FeedbackRepository.create(mContext, this, MAX_COUNT_UPLOAD_PICTURES);
-        mFeedbackRepository.setCallback(this);
+        if (mFeedbackRepository == null) {
+            mFeedbackRepository = FeedbackRepository.create(mContext, this,
+                    MAX_COUNT_UPLOAD_PICTURES);
+            mFeedbackRepository.setCallback(this);
+        }
     }
 
     @Override
-    public void detachFromView(@NonNull IFeedbackView view) {
-        mFeedbackRepository.clearPictures(true);
-        mFeedbackRepository.setCallback(null);
-        mFeedbackRepository = null;
-        super.detachFromView(view);
+    protected void onCleared() {
+        super.onCleared();
+        if (mFeedbackRepository != null) {
+            mFeedbackRepository.clearPictures(true);
+            mFeedbackRepository.setCallback(null);
+            mFeedbackRepository = null;
+        }
     }
 
     @Override
diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/IFeedbackPresenter.java b/app/src/main/java/com/liuzhenlin/videos/presenter/IFeedbackPresenter.java
index 529b11f..eb181f5 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/IFeedbackPresenter.java
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/IFeedbackPresenter.java
@@ -20,8 +20,9 @@ import com.liuzhenlin.videos.view.activity.IFeedbackView;
 public interface IFeedbackPresenter extends IPresenter<IFeedbackView> {
 
     @NonNull
-    static IFeedbackPresenter newInstance() {
-        return new FeedbackPresenter();
+    static <T extends Presenter<IFeedbackView> & IFeedbackPresenter> Class<T> getImplClass() {
+        //noinspection unchecked
+        return (Class<T>) FeedbackPresenter.class;
     }
 
     void restoreInstanceState(@Nullable Bundle savedInstanceState);
diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/IVideoPresenter.java b/app/src/main/java/com/liuzhenlin/videos/presenter/IVideoPresenter.java
index 16145c0..b791260 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/IVideoPresenter.java
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/IVideoPresenter.java
@@ -53,7 +53,8 @@ public interface IVideoPresenter extends IPresenter<IVideoView> {
     TextureVideoView.PlayListAdapter<? extends IVideoView.PlaylistViewHolder> newPlaylistAdapter();
 
     @NonNull
-    static IVideoPresenter newInstance() {
-        return new VideoPresenter();
+    static <T extends Presenter<IVideoView> & IVideoPresenter> Class<T> getImplClass() {
+        //noinspection unchecked
+        return (Class<T>) VideoPresenter.class;
     }
 }
diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/LocalSearchedVideosPresenter.kt b/app/src/main/java/com/liuzhenlin/videos/presenter/LocalSearchedVideosPresenter.kt
index 2f9460a..341fc29 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/LocalSearchedVideosPresenter.kt
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/LocalSearchedVideosPresenter.kt
@@ -41,8 +41,10 @@ interface ILocalSearchedVideosPresenter : IPresenter<ILocalSearchedVideosView>,
 
     companion object {
         @JvmStatic
-        fun newInstance(): ILocalSearchedVideosPresenter {
-            return LocalSearchedVideosPresenter()
+        fun <T> getImplClass(): Class<T> where T : Presenter<ILocalSearchedVideosView>,
+                                               T : ILocalSearchedVideosPresenter {
+            @Suppress("UNCHECKED_CAST")
+            return LocalSearchedVideosPresenter::class.java as Class<T>
         }
     }
 }
@@ -70,18 +72,23 @@ class LocalSearchedVideosPresenter : Presenter<ILocalSearchedVideosView>(),
 
                 override fun onLoadCanceled() = onVideoItemsLoadCanceled()
             })
+            model.setCallback(this)
             mModel = model
         }
-        model.setCallback(this)
-        model.setVideos(view.getArguments()?.getParcelableArrayList(KEY_VIDEOS) ?: model.videos)
+        val args = view.getArguments()
+        if (args?.containsKey(KEY_VIDEOS) == true) {
+            model.setVideos(args.getParcelableArrayList(KEY_VIDEOS) ?: model.videos)
+            args.remove(KEY_VIDEOS)
+        }
     }
 
-    override fun detachFromView(view: ILocalSearchedVideosView) {
-        super.detachFromView(view)
+    override fun onCleared() {
+        super.onCleared()
         val videos = mModel?.videos ?: arrayListOf()
-        view.onReturnResult(RESULT_CODE_LOCAL_SEARCHED_VIDEOS_FRAGMENT,
+        mView?.onReturnResult(RESULT_CODE_LOCAL_SEARCHED_VIDEOS_FRAGMENT,
                 Intent().putParcelableArrayListExtra(
                         KEY_VIDEOS, videos as? ArrayList<Video> ?: ArrayList(videos)))
+        stopLoadVideos()
         mModel?.setCallback(null)
     }
 
diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/LocalVideoListPresenter.kt b/app/src/main/java/com/liuzhenlin/videos/presenter/LocalVideoListPresenter.kt
index cffa775..0fcc41c 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/LocalVideoListPresenter.kt
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/LocalVideoListPresenter.kt
@@ -81,8 +81,10 @@ interface ILocalVideoListPresenter : IPresenter<ILocalVideoListView>,
 
     companion object {
         @JvmStatic
-        fun newInstance(): ILocalVideoListPresenter {
-            return LocalVideoListPresenter()
+        fun <T> getImplClass(): Class<T> where T : Presenter<ILocalVideoListView>,
+                                               T : ILocalVideoListPresenter {
+            @Suppress("UNCHECKED_CAST")
+            return LocalVideoListPresenter::class.java as Class<T>
         }
     }
 }
@@ -96,6 +98,7 @@ class LocalVideoListPresenter : Presenter<ILocalVideoListView>(), ILocalVideoLis
         get() = mModel.itemsSortMode
 
     private var mViewsCreated = false
+    private var mFirstTimeViewsCreate = true
 
     private var _mModel: LocalVideoListModel? = null
     private val mModel: LocalVideoListModel
@@ -118,37 +121,49 @@ class LocalVideoListPresenter : Presenter<ILocalVideoListView>(), ILocalVideoLis
 
     override fun attachToView(view: ILocalVideoListView) {
         super.attachToView(view)
-        if (view.getArguments()?.containsKey(KEY_VIDEODIR) == true) {
-            _mModel = LocalVideoListModel(mContext, view.getArguments()?.getParcelable(KEY_VIDEODIR))
+        val oldModel = _mModel
+        val args = view.getArguments()
+        if (args?.containsKey(KEY_VIDEODIR) == true) {
+            _mModel = LocalVideoListModel(mContext, args.getParcelable(KEY_VIDEODIR))
+            args.remove(KEY_VIDEODIR)
         }
-        mModel.setCallback(this)
-        mModel.addOnLoadListener(object : OnLoadListener<Nothing, MutableList<VideoListItem>?> {
-            init {
-                mVideosLoadListener = this
+        if (mVideosLoadListener == null || mModel !== oldModel) {
+            oldModel?.setCallback(null)
+            mVideosLoadListener?.let {
+                oldModel?.removeOnLoadListener(it)
             }
+            mModel.setCallback(this)
+            mModel.addOnLoadListener(object : OnLoadListener<Nothing, MutableList<VideoListItem>?> {
+                init {
+                    mVideosLoadListener = this
+                }
 
-            override fun onLoadStart() {
-                mView?.onVideosLoadStart()
-            }
+                override fun onLoadStart() {
+                    mView?.onVideosLoadStart()
+                }
 
-            override fun onLoadFinish(result: MutableList<VideoListItem>?) {
-                mModel.setVideoListItems(result)
-                mView?.onVideosLoadFinish()
-            }
+                override fun onLoadFinish(result: MutableList<VideoListItem>?) {
+                    mModel.setVideoListItems(result)
+                    mView?.onVideosLoadFinish()
+                }
 
-            override fun onLoadCanceled() {
-                mView?.onVideosLoadCanceled()
-            }
-        })
+                override fun onLoadCanceled() {
+                    mView?.onVideosLoadCanceled()
+                }
+            })
+        }
     }
 
-    override fun detachFromView(view: ILocalVideoListView) {
-        super.detachFromView(view)
+    override fun onCleared() {
+        super.onCleared()
         if (mSublist) {
-            view.onReturnResult(
+            mView.onReturnResult(
                     RESULT_CODE_LOCAL_VIDEO_SUBLIST_FRAGMENT,
                     Intent().putExtra(KEY_VIDEODIR, mModel.parentVideoDir))
+        } else {
+            mModel.stopWatchingVideos(false)
         }
+        stopLoadVideos()
         mModel.setCallback(null)
         mVideosLoadListener?.let {
             mModel.removeOnLoadListener(it)
@@ -169,11 +184,12 @@ class LocalVideoListPresenter : Presenter<ILocalVideoListView>(), ILocalVideoLis
             // Make sure to load the videos after all restored Fragments have created their views,
             // otherwise the application will crash when the video loading callback is sent to one
             // of the upper Fragments because its UI controls will probably not have been initialized.
-            if (!mViewsCreated) {
+            if (!mViewsCreated && mFirstTimeViewsCreate) {
                 startLoadVideos()
             }
         }
         mViewsCreated = true
+        mFirstTimeViewsCreate = false
     }
 
     override fun onViewStopped(view: ILocalVideoListView) {
@@ -186,9 +202,6 @@ class LocalVideoListPresenter : Presenter<ILocalVideoListView>(), ILocalVideoLis
     override fun onViewDestroyed(view: ILocalVideoListView) {
         super.onViewDestroyed(view)
         mViewsCreated = false
-        if (!mSublist)
-            mModel.stopWatchingVideos(false)
-        stopLoadVideos()
     }
 
     override fun startLoadVideos() = mModel.startLoader()
diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/Presenter.java b/app/src/main/java/com/liuzhenlin/videos/presenter/Presenter.java
index a91ca20..bbad1d6 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/Presenter.java
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/Presenter.java
@@ -10,14 +10,18 @@ import android.content.Context;
 
 import androidx.annotation.NonNull;
 import androidx.core.util.ObjectsCompat;
+import androidx.lifecycle.ViewModel;
+import androidx.lifecycle.ViewModelProvider;
+import androidx.lifecycle.ViewModelStoreOwner;
 
+import com.liuzhenlin.common.utils.ReflectionUtils;
 import com.liuzhenlin.videos.view.IView;
 
 /**
  * @author 刘振林
  */
 @SuppressWarnings("rawtypes")
-public class Presenter<V extends IView> implements IPresenter<V> {
+public class Presenter<V extends IView> extends ViewModel implements IPresenter<V> {
 
     protected V mView;
     protected Context mThemedContext;
@@ -72,4 +76,31 @@ public class Presenter<V extends IView> implements IPresenter<V> {
     @Override
     public void onViewDestroyed(@NonNull V view) {
     }
+
+    public static class Provider {
+
+        private static final ViewModelProvider.Factory sViewModelFactory =
+                new ViewModelProvider.Factory() {
+                    @NonNull
+                    @Override
+                    public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {
+                        try {
+                            return ReflectionUtils.getDeclaredConstructor(modelClass).newInstance();
+                        } catch (Exception e) {
+                            throw new RuntimeException("Cannot create an instance of" + modelClass, e);
+                        }
+                    }
+                };
+
+        private final ViewModelProvider mViewModelProvider;
+
+        public Provider(@NonNull ViewModelStoreOwner owner) {
+            mViewModelProvider = new ViewModelProvider(owner, sViewModelFactory);
+        }
+
+        @NonNull
+        public <P extends Presenter<V>, V extends IView> P get(@NonNull Class<P> presenterClass) {
+            return mViewModelProvider.get(presenterClass);
+        }
+    }
 }
diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/VideoMovePresenter.kt b/app/src/main/java/com/liuzhenlin/videos/presenter/VideoMovePresenter.kt
index 96490cc..8cff9c2 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/VideoMovePresenter.kt
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/VideoMovePresenter.kt
@@ -25,8 +25,9 @@ interface IVideoMovePresenter : IPresenter<IVideoMoveView> {
 
     companion object {
         @JvmStatic
-        fun newInstance(): IVideoMovePresenter {
-            return VideoMovePresenter()
+        fun <T> getImplClass(): Class<T> where T : Presenter<IVideoMoveView>, T : IVideoMovePresenter {
+            @Suppress("UNCHECKED_CAST")
+            return VideoMovePresenter::class.java as Class<T>
         }
     }
 }
@@ -38,12 +39,14 @@ class VideoMovePresenter : Presenter<IVideoMoveView>(), IVideoMovePresenter,
 
     override fun attachToView(view: IVideoMoveView) {
         super.attachToView(view)
-        mVideoMoveRepository = VideoMoveRepository.create(mContext, view.getArguments())
-        mVideoMoveRepository!!.setCallback(this)
+        if (mVideoMoveRepository == null) {
+            mVideoMoveRepository = VideoMoveRepository.create(mContext, view.getArguments())
+            mVideoMoveRepository!!.setCallback(this)
+        }
     }
 
-    override fun detachFromView(view: IVideoMoveView) {
-        super.detachFromView(view)
+    override fun onCleared() {
+        super.onCleared()
         mVideoMoveRepository?.setCallback(null)
         mVideoMoveRepository = null
     }
diff --git a/app/src/main/java/com/liuzhenlin/videos/presenter/VideoPresenter.java b/app/src/main/java/com/liuzhenlin/videos/presenter/VideoPresenter.java
index fafb1e9..863e0eb 100644
--- a/app/src/main/java/com/liuzhenlin/videos/presenter/VideoPresenter.java
+++ b/app/src/main/java/com/liuzhenlin/videos/presenter/VideoPresenter.java
@@ -38,15 +38,19 @@ class VideoPresenter extends Presenter<IVideoView> implements IVideoPresenter,
     @Override
     public void attachToView(@NonNull IVideoView view) {
         super.attachToView(view);
-        mVideoRepository = VideoRepository.create(mContext);
-        mVideoRepository.setCallback(this);
+        if (mVideoRepository == null) {
+            mVideoRepository = VideoRepository.create(mContext);
+            mVideoRepository.setCallback(this);
+        }
     }
 
     @Override
-    public void detachFromView(@NonNull IVideoView view) {
-        super.detachFromView(view);
-        mVideoRepository.setCallback(null);
-        mVideoRepository = null;
+    protected void onCleared() {
+        super.onCleared();
+        if (mVideoRepository != null) {
+            mVideoRepository.setCallback(null);
+            mVideoRepository = null;
+        }
     }
 
     @Override
diff --git a/app/src/main/java/com/liuzhenlin/videos/view/activity/FeedbackActivity.java b/app/src/main/java/com/liuzhenlin/videos/view/activity/FeedbackActivity.java
index 1138bb5..cba954b 100644
--- a/app/src/main/java/com/liuzhenlin/videos/view/activity/FeedbackActivity.java
+++ b/app/src/main/java/com/liuzhenlin/videos/view/activity/FeedbackActivity.java
@@ -59,6 +59,7 @@ import com.liuzhenlin.videos.Consts;
 import com.liuzhenlin.videos.R;
 import com.liuzhenlin.videos.dao.AppPrefs;
 import com.liuzhenlin.videos.presenter.IFeedbackPresenter;
+import com.liuzhenlin.videos.presenter.Presenter;
 import com.liuzhenlin.videos.view.adapter.GalleryPagerAdapter;
 
 import java.util.ArrayList;
@@ -85,7 +86,7 @@ public class FeedbackActivity extends BaseActivity implements IFeedbackView, Vie
 
     @Synthetic boolean mShouldSaveDataOnDestroy;
 
-    @Synthetic final IFeedbackPresenter mPresenter = IFeedbackPresenter.newInstance();
+    @Synthetic IFeedbackPresenter mPresenter;
 
     @Nullable
     @Override
@@ -196,6 +197,7 @@ public class FeedbackActivity extends BaseActivity implements IFeedbackView, Vie
             return false;
         });
 
+        mPresenter = new Presenter.Provider(this).get(IFeedbackPresenter.getImplClass());
         mPresenter.attachToView(this);
 
         BaseAdapter adapter = mPresenter.getPictureGridAdapter();
diff --git a/app/src/main/java/com/liuzhenlin/videos/view/activity/VideoActivity.java b/app/src/main/java/com/liuzhenlin/videos/view/activity/VideoActivity.java
index 5c3ce05..5584f1e 100644
--- a/app/src/main/java/com/liuzhenlin/videos/view/activity/VideoActivity.java
+++ b/app/src/main/java/com/liuzhenlin/videos/view/activity/VideoActivity.java
@@ -64,6 +64,7 @@ import com.liuzhenlin.videos.R;
 import com.liuzhenlin.videos.bean.Video;
 import com.liuzhenlin.videos.dao.AppPrefs;
 import com.liuzhenlin.videos.presenter.IVideoPresenter;
+import com.liuzhenlin.videos.presenter.Presenter;
 import com.liuzhenlin.videos.utils.VideoUtils2;
 import com.liuzhenlin.videos.web.youtube.WebService;
 
@@ -98,7 +99,7 @@ public class VideoActivity extends BaseActivity implements IVideoView,
     private ImageView mLockUnlockOrientationButton;
 
     @Synthetic IVideoPlayer mVideoPlayer;
-    @Synthetic final IVideoPresenter mPresenter = IVideoPresenter.newInstance();
+    @Synthetic IVideoPresenter mPresenter;
 
     @Synthetic int mVideoWidth;
     @Synthetic int mVideoHeight;
@@ -257,6 +258,7 @@ public class VideoActivity extends BaseActivity implements IVideoView,
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        mPresenter = new Presenter.Provider(this).get(IVideoPresenter.getImplClass());
         mPresenter.attachToView(this);
         mPresenter.initPlaylist(savedInstanceState, getIntent(),
                 new IVideoPresenter.PlaylistInitializationCallback() {
diff --git a/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalSearchedVideosFragment.kt b/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalSearchedVideosFragment.kt
index 2c55026..7bd114a 100644
--- a/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalSearchedVideosFragment.kt
+++ b/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalSearchedVideosFragment.kt
@@ -45,6 +45,7 @@ import com.liuzhenlin.floatingmenu.FloatingMenu
 import com.liuzhenlin.videos.*
 import com.liuzhenlin.videos.bean.Video
 import com.liuzhenlin.videos.presenter.ILocalSearchedVideosPresenter
+import com.liuzhenlin.videos.presenter.Presenter
 import com.liuzhenlin.videos.utils.VideoUtils2
 import com.liuzhenlin.videos.view.IView
 import com.liuzhenlin.videos.view.fragment.Payloads.*
@@ -95,7 +96,8 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
     private lateinit var mAdapterWrapper: SearchedVideoListAdapterWrapper
     private var mSelectedItemIndex = NO_POSITION
 
-    internal val presenter = ILocalSearchedVideosPresenter.newInstance()
+    internal var presenter: ILocalSearchedVideosPresenter? = null
+        private set
 
     private var mVideoOptionsMenu: FloatingMenu? = null
     private var mDownX = 0
@@ -109,16 +111,16 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
     init {
         lifecycle.addObserver(object : DefaultLifecycleObserver {
             override fun onStart(owner: LifecycleOwner) =
-                    presenter.onViewStart(this@LocalSearchedVideosFragment)
+                    presenter?.onViewStart(this@LocalSearchedVideosFragment) ?: Unit
 
             override fun onResume(owner: LifecycleOwner) =
-                    presenter.onViewResume(this@LocalSearchedVideosFragment)
+                    presenter?.onViewResume(this@LocalSearchedVideosFragment) ?: Unit
 
             override fun onPause(owner: LifecycleOwner) =
-                    presenter.onViewPaused(this@LocalSearchedVideosFragment)
+                    presenter?.onViewPaused(this@LocalSearchedVideosFragment) ?: Unit
 
             override fun onStop(owner: LifecycleOwner) =
-                    presenter.onViewStopped(this@LocalSearchedVideosFragment)
+                    presenter?.onViewStopped(this@LocalSearchedVideosFragment) ?: Unit
         })
     }
 
@@ -130,6 +132,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
         super.onAttach(context)
 
         val parent = parentFragment
+        presenter = Presenter.Provider(this).get(ILocalSearchedVideosPresenter.getImplClass())
 
         mInteractionCallback = when {
             parent is InteractionCallback -> parent
@@ -147,7 +150,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
         }
         mLifecycleCallback?.onFragmentAttached(this)
 
-        presenter.attachToView(this)
+        presenter?.attachToView(this)
     }
 
     override fun onScreenWidthDpLevelChanged(
@@ -185,7 +188,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
 
                 override fun onQueryTextChange(newText: String): Boolean {
                     mSearchText = newText.trim()
-                    presenter.refreshList(mSearchText)
+                    presenter?.refreshList(mSearchText)
                     return true
                 }
             })
@@ -268,7 +271,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
                     SORT_MODE_RELEVANCY_DESC -> SORT_MODE_RELEVANCY_ASC
                     else -> SORT_MODE_RELEVANCY_DESC
                 }
-                presenter.sortList(sortMode)
+                presenter?.sortList(sortMode)
             }
             R.id.btn_sortByName -> {
                 val sortMode = when (mSortByNameBtn.tag) {
@@ -276,7 +279,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
                     SORT_MODE_NAME_DESC -> SORT_MODE_NAME_ASC
                     else -> SORT_MODE_NAME_ASC
                 }
-                presenter.sortList(sortMode)
+                presenter?.sortList(sortMode)
             }
             R.id.btn_sortByDate -> {
                 val sortMode = when (mSortByDateBtn.tag) {
@@ -284,7 +287,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
                     SORT_MODE_DATE_DESC -> SORT_MODE_DATE_ASC
                     else -> SORT_MODE_DATE_ASC
                 }
-                presenter.sortList(sortMode)
+                presenter?.sortList(sortMode)
             }
             R.id.btn_sortBySize -> {
                 val sortMode = when (mSortBySizeBtn.tag) {
@@ -292,19 +295,19 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
                     SORT_MODE_SIZE_DESC -> SORT_MODE_SIZE_ASC
                     else -> SORT_MODE_SIZE_ASC
                 }
-                presenter.sortList(sortMode)
+                presenter?.sortList(sortMode)
             }
         }
 
         if (v.parent === mRecyclerView) {
-            presenter.playVideoAt(v.tag as Int)
+            presenter?.playVideoAt(v.tag as Int)
         }
     }
 
     override fun onLongClick(v: View) =
             if (v.parent === mRecyclerView) {
                 val index = v.tag as Int
-                presenter.showVideoOptionsMenu(index) { video ->
+                presenter?.showVideoOptionsMenu(index) { video ->
                     val headersCount = mAdapterWrapper.headersCount
                     val position = headersCount + index
                     val videoWritable = video.isWritable
@@ -317,11 +320,11 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
                     mVideoOptionsMenu!!.setItemEnabled(R.id.rename, videoWritable)
                     mVideoOptionsMenu!!.setOnItemClickListener { menuItem, _ ->
                         when (menuItem.iconResId) {
-                            R.drawable.ic_file_move_menu -> presenter.moveVideoAt(index)
-                            R.drawable.ic_delete_24dp_menu -> presenter.deleteVideoAt(index)
-                            R.drawable.ic_edit_24dp_menu -> presenter.renameVideoAt(index)
-                            R.drawable.ic_share_24dp_menu -> presenter.shareVideoAt(index)
-                            R.drawable.ic_info_24dp_menu -> presenter.viewDetailsOfVideoAt(index)
+                            R.drawable.ic_file_move_menu -> presenter?.moveVideoAt(index)
+                            R.drawable.ic_delete_24dp_menu -> presenter?.deleteVideoAt(index)
+                            R.drawable.ic_edit_24dp_menu -> presenter?.renameVideoAt(index)
+                            R.drawable.ic_share_24dp_menu -> presenter?.shareVideoAt(index)
+                            R.drawable.ic_info_24dp_menu -> presenter?.viewDetailsOfVideoAt(index)
                         }
                     }
                     mVideoOptionsMenu!!.setOnDismissListener {
@@ -343,7 +346,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
         mLifecycleCallback?.onFragmentViewCreated(this)
-        presenter.onViewCreated(this)
+        presenter?.onViewCreated(this)
     }
 
     override fun onDestroyView() {
@@ -353,12 +356,14 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
         mSelectedItemIndex = NO_POSITION
         mVideoOptionsMenu?.dismiss()
 
-        if (mSearchText != EMPTY_STRING) {
-            mSearchText = EMPTY_STRING
-            presenter.refreshList(EMPTY_STRING)
+        val presenter = presenter
+        if (presenter != null) {
+            if (mSearchText != EMPTY_STRING) {
+                mSearchText = EMPTY_STRING
+                presenter.refreshList(EMPTY_STRING)
+            }
+            presenter.onViewDestroyed(this)
         }
-        presenter.stopLoadVideos()
-        presenter.onViewDestroyed(this)
 
         mInteractionCallback.setOnRefreshLayoutChildScrollUpCallback(null)
     }
@@ -366,7 +371,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
     override fun onDetach() {
         super.onDetach()
         mLifecycleCallback?.onFragmentDetached(this)
-        presenter.detachFromView(this)
+        presenter?.detachFromView(this)
     }
 
     override fun onReturnResult(resultCode: Int, data: Intent?) {
@@ -375,7 +380,7 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
 
     override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
         super.onActivityResult(requestCode, resultCode, data)
-        presenter.onActivityResult(requestCode, resultCode, data)
+        presenter?.onActivityResult(requestCode, resultCode, data)
     }
 
     override fun updateListVisibilityAndSearchResultText() {
@@ -466,7 +471,9 @@ class LocalSearchedVideosFragment : BaseFragment(), ILocalSearchedVideosView, Vi
         }
     }
 
-    override fun onRefresh() = presenter.startLoadVideos()
+    override fun onRefresh() {
+        presenter?.startLoadVideos()
+    }
 
     override fun onVideosLoadStart() {
         mVideoOptionsMenu?.dismiss()
diff --git a/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideoListFragment.kt b/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideoListFragment.kt
index 12606a5..6882054 100644
--- a/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideoListFragment.kt
+++ b/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideoListFragment.kt
@@ -55,6 +55,7 @@ import com.liuzhenlin.videos.presenter.ILocalVideoListPresenter.VideoListAdapter
 import com.liuzhenlin.videos.presenter.ILocalVideoListPresenter.VideoListAdapter.Companion.PAYLOAD_REFRESH_VIDEODIR_THUMB
 import com.liuzhenlin.videos.presenter.ILocalVideoListPresenter.VideoListAdapter.Companion.VIEW_TYPE_VIDEO
 import com.liuzhenlin.videos.presenter.ILocalVideoListPresenter.VideoListAdapter.Companion.VIEW_TYPE_VIDEODIR
+import com.liuzhenlin.videos.presenter.Presenter
 import com.liuzhenlin.videos.utils.VideoUtils2
 import com.liuzhenlin.videos.view.IView
 import com.liuzhenlin.videos.view.fragment.Payloads.*
@@ -132,7 +133,8 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
     private var mShareButton_IOW: TextView? = null
     private var mDetailsButton_IOW: TextView? = null
 
-    internal val presenter = ILocalVideoListPresenter.newInstance()
+    internal var presenter: ILocalVideoListPresenter? = null
+        private set
 
     private var _TOP: String? = null
     private val TOP: String
@@ -180,6 +182,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
         super.onAttach(context)
 
         val parent = parentFragment
+        presenter = Presenter.Provider(this).get(ILocalVideoListPresenter.getImplClass())
 
         mInteractionCallback = when {
             parent is InteractionCallback -> parent
@@ -197,7 +200,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
         }
         mLifecycleCallback?.onFragmentAttached(this)
 
-        presenter.attachToView(this)
+        presenter?.attachToView(this)
     }
 
     override fun onCreateView(
@@ -256,42 +259,42 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
         mLifecycleCallback?.onFragmentViewCreated(this)
-        presenter.onViewCreated(this)
+        presenter?.onViewCreated(this)
     }
 
     override fun onStart() {
         super.onStart()
-        presenter.onViewStart(this)
+        presenter?.onViewStart(this)
     }
 
     override fun onResume() {
         super.onResume()
-        presenter.onViewResume(this)
+        presenter?.onViewResume(this)
     }
 
     override fun onPause() {
         super.onPause()
-        presenter.onViewPaused(this)
+        presenter?.onViewPaused(this)
     }
 
     // This method can be called when a stopped activity is being recreated,
     // in which case onStop() is being called unexpectedly.
     override fun onStop() {
         super.onStop()
-        presenter.onViewStopped(this)
+        presenter?.onViewStopped(this)
     }
 
     override fun onDestroyView() {
         super.onDestroyView()
         mLifecycleCallback?.onFragmentViewDestroyed(this)
         dismissAllFloatingWindows()
-        presenter.onViewDestroyed(this)
+        presenter?.onViewDestroyed(this)
     }
 
     override fun onDetach() {
         super.onDetach()
         mLifecycleCallback?.onFragmentDetached(this)
-        presenter.detachFromView(this)
+        presenter?.detachFromView(this)
     }
 
     override fun onReturnResult(resultCode: Int, data: Intent?) {
@@ -309,7 +312,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
 
     override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
         super.onActivityResult(requestCode, resultCode, data)
-        presenter.onActivityResult(requestCode, resultCode, data)
+        presenter?.onActivityResult(requestCode, resultCode, data)
     }
 
     override fun goToLocalVideoSubListFragment(args: Bundle) =
@@ -318,7 +321,9 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
     override fun goToVideoMoveFragment(args: Bundle) =
             mInteractionCallback.goToVideoMoveFragment(args)
 
-    override fun onRefresh() = presenter.startLoadVideos()
+    override fun onRefresh() {
+        presenter?.startLoadVideos()
+    }
 
     override fun dismissItemOptionsWindow() {
         // 1）自动刷新时隐藏弹出的多选窗口
@@ -543,29 +548,29 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                 val index = v.tag as Int
                 if (mItemOptionsWindow == null) {
                     when (mAdapterWrapper.innerAdapter.getItemViewType(index)) {
-                        VIEW_TYPE_VIDEO -> presenter.playVideoAt(index) // 播放视频
+                        VIEW_TYPE_VIDEO -> presenter?.playVideoAt(index) // 播放视频
                         VIEW_TYPE_VIDEODIR -> { // 显示指定目录的视频
-                            presenter.openVideoDirectoryAt(index)
+                            presenter?.openVideoDirectoryAt(index)
                         }
                     }
                 } else {
-                    presenter.toggleItemChecked(index)
+                    presenter?.toggleItemChecked(index)
                 }
             }
 
             R.id.checkbox -> {
                 val index = v.tag as Int
-                presenter.toggleItemChecked(index)
+                presenter?.toggleItemChecked(index)
             }
 
             // 置顶或取消置顶视频（目录）
             R.id.btn_top -> {
                 val index = v.tag as Int
-                presenter.toggleItemTopped(index)
+                presenter?.toggleItemTopped(index)
             }
 
             // 删除视频
-            R.id.btn_delete -> presenter.deleteItemAt(v.tag as Int, true)
+            R.id.btn_delete -> presenter?.deleteItemAt(v.tag as Int, true)
             R.id.btn_confirm_deleteVideoListItemDialog -> {
                 val window = mDeleteItemDialog!!.window!!
                 val decorView = window.decorView as ViewGroup
@@ -578,16 +583,16 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                 if (onDeleteAction != null) {
                     onDeleteAction()
                 } else {
-                    presenter.deleteItem(item, false)
+                    presenter?.deleteItem(item, false)
                 }
             }
             R.id.btn_cancel_deleteVideoListItemDialog -> mDeleteItemDialog!!.cancel()
 
             // 移动（多个）视频
-            R.id.btn_move -> presenter.moveCheckedItems()
+            R.id.btn_move -> presenter?.moveCheckedItems()
 
             // 删除（多个）视频
-            R.id.btn_delete_vlow -> presenter.deleteCheckedItems(true)
+            R.id.btn_delete_vlow -> presenter?.deleteCheckedItems(true)
             R.id.btn_confirm_deleteItemsWindow -> {
                 val view = mDeleteItemsWindow!!.contentView as ViewGroup
                 @Suppress("UNCHECKED_CAST")
@@ -602,9 +607,9 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                     onDeleteAction()
                 } else {
                     if (items.size == 1) {
-                        presenter.deleteItem(items[0], false)
+                        presenter?.deleteItem(items[0], false)
                     } else {
-                        presenter.deleteItems(*items, needUserConfirm = false)
+                        presenter?.deleteItems(*items, needUserConfirm = false)
                     }
                 }
             }
@@ -612,7 +617,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
 
             // 重命名视频或给视频目录取别名
             R.id.btn_rename -> {
-                presenter.renameCheckedItem()
+                presenter?.renameCheckedItem()
                 mItemOptionsWindow!!.dismiss()
             }
             R.id.btn_complete_renameVideoListItemDialog -> {
@@ -634,20 +639,20 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                     onRenameAction(newName)
                 } else {
                     item.name = newName
-                    presenter.renameItemTo(item)
+                    presenter?.renameItemTo(item)
                 }
             }
             R.id.btn_cancel_renameVideoListItemDialog -> mRenameItemDialog!!.cancel()
 
             // 分享
             R.id.btn_share -> {
-                presenter.shareCheckedVideo()
+                presenter?.shareCheckedVideo()
                 mItemOptionsWindow!!.dismiss()
             }
 
             // 显示视频（目录）详情
             R.id.btn_details -> {
-                presenter.viewCheckedItemDetails()
+                presenter?.viewCheckedItemDetails()
                 mItemOptionsWindow!!.dismiss()
             }
             R.id.btn_ok_videoListItemDetailsDialog -> mItemDetailsDialog!!.cancel()
@@ -657,10 +662,10 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
             R.id.btn_selectAll -> {
                 // 全选
                 if (SELECT_ALL == mSelectAllButton!!.text.toString()) {
-                    presenter.selectAllItems()
+                    presenter?.selectAllItems()
                     // 全不选
                 } else {
-                    presenter.unselectAllItems()
+                    presenter?.unselectAllItems()
                 }
             }
 
@@ -670,7 +675,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                     SORT_MODE_NAME_DESC -> SORT_MODE_NAME_ASC
                     else -> SORT_MODE_NAME_ASC
                 }
-                presenter.reorderAllItems(sortMode)
+                presenter?.reorderAllItems(sortMode)
             }
             R.id.btn_sortByDate -> {
                 val sortMode = when (mSortByDateBtn.tag) {
@@ -678,7 +683,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                     SORT_MODE_DATE_DESC -> SORT_MODE_DATE_ASC
                     else -> SORT_MODE_DATE_ASC
                 }
-                presenter.reorderAllItems(sortMode)
+                presenter?.reorderAllItems(sortMode)
             }
             R.id.btn_sortBySize -> {
                 val sortMode = when (mSortBySizeBtn.tag) {
@@ -686,7 +691,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                     SORT_MODE_SIZE_DESC -> SORT_MODE_SIZE_ASC
                     else -> SORT_MODE_SIZE_ASC
                 }
-                presenter.reorderAllItems(sortMode)
+                presenter?.reorderAllItems(sortMode)
             }
         }
     }
@@ -804,7 +809,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
                         notifyItemRangeChanged(position + 1, itemCount - position - 1,
                                 PAYLOAD_CHANGE_CHECKBOX_VISIBILITY or PAYLOAD_REFRESH_CHECKBOX)
                         // 勾选当前长按的itemView
-                        presenter.setItemChecked(itemIndex, true)
+                        presenter?.setItemChecked(itemIndex, true)
                         notifyItemChanged(position,
                                 PAYLOAD_CHANGE_CHECKBOX_VISIBILITY
                                         or PAYLOAD_REFRESH_CHECKBOX_WITH_ANIMATOR)
@@ -827,7 +832,7 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
 
                     val headersCount = mAdapterWrapper.headersCount
                     for (index in 0 until mAdapterWrapper.itemCount - headersCount) {
-                        presenter.setItemChecked(index, false)
+                        presenter?.setItemChecked(index, false)
                     }
                     mAdapterWrapper.notifyItemRangeChanged(
                             headersCount, mAdapterWrapper.itemCount - headersCount,
@@ -1216,7 +1221,9 @@ class LocalVideoListFragment : BaseFragment(), ILocalVideoListView,
         }
     }
 
-    override fun showVideosMovePage(vararg items: VideoListItem) = presenter.moveItems(*items)
+    override fun showVideosMovePage(vararg items: VideoListItem) {
+        presenter?.moveItems(*items)
+    }
 
     override fun onItemsDeleteStart(vararg items: VideoListItem) {
         if (mItemsDeletingDialog == null) {
diff --git a/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideosFragment.kt b/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideosFragment.kt
index c836fc6..d3d6414 100644
--- a/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideosFragment.kt
+++ b/app/src/main/java/com/liuzhenlin/videos/view/fragment/LocalVideosFragment.kt
@@ -117,17 +117,18 @@ class LocalVideosFragment : Fragment(), ILocalVideosFragment, FragmentPartLifecy
 
                 val sublistFragmentIndex = mLocalVideoSubListFragments?.indexOf(childFragment) ?: -1
                 if (sublistFragmentIndex >= 0) {
-                    mLocalVideoListFragment.presenter
-                            .addOnVideoItemsLoadListener(childFragment.presenter)
-                    if (childFragment.presenter is LocalVideoListPresenter) {
-                        val lastFragment =
-                                if (sublistFragmentIndex > 0)
-                                    mLocalVideoSubListFragments!![sublistFragmentIndex - 1]
-                                else
-                                    mLocalVideoListFragment
-                        val parentPresenter = lastFragment.presenter
-                        if (parentPresenter is LocalVideoListPresenter)
-                            childFragment.presenter.setParentPresenter(parentPresenter)
+                    childFragment.presenter?.let {
+                        mLocalVideoListFragment.presenter?.addOnVideoItemsLoadListener(it)
+                        if (it is LocalVideoListPresenter) {
+                            val lastFragment =
+                                    if (sublistFragmentIndex > 0)
+                                        mLocalVideoSubListFragments!![sublistFragmentIndex - 1]
+                                    else
+                                        mLocalVideoListFragment
+                            val parentPresenter = lastFragment.presenter
+                            if (parentPresenter is LocalVideoListPresenter)
+                                it.setParentPresenter(parentPresenter)
+                        }
                     }
 
                     mInteractionCallback.setSideDrawerEnabled(false)
@@ -139,7 +140,9 @@ class LocalVideosFragment : Fragment(), ILocalVideosFragment, FragmentPartLifecy
 
             childFragment === mLocalSearchedVideosFragment -> {
                 childFragment.setVideoOpCallback(mLocalVideoListFragment)
-                mLocalVideoListFragment.presenter.addOnVideoItemsLoadListener(childFragment.presenter)
+                childFragment.presenter?.let {
+                    mLocalVideoListFragment.presenter?.addOnVideoItemsLoadListener(it)
+                }
                 mSwipeRefreshLayout.setOnRefreshListener(childFragment)
 
                 mInteractionCallback.setSideDrawerEnabled(false)
@@ -163,8 +166,9 @@ class LocalVideosFragment : Fragment(), ILocalVideosFragment, FragmentPartLifecy
                 val sublistFragmentIndex = mLocalVideoSubListFragments?.indexOf(childFragment) ?: -1
                 if (sublistFragmentIndex >= 0) {
                     mLocalVideoSubListFragments!!.removeAt(sublistFragmentIndex)
-                    mLocalVideoListFragment.presenter
-                            .removeOnVideoItemsLoadListener(childFragment.presenter)
+                    childFragment.presenter?.let {
+                        mLocalVideoListFragment.presenter?.removeOnVideoItemsLoadListener(it)
+                    }
                     if (sublistFragmentIndex == 0) {
                         mSwipeRefreshLayout.setOnRefreshListener(mLocalVideoListFragment)
 
@@ -178,8 +182,9 @@ class LocalVideosFragment : Fragment(), ILocalVideosFragment, FragmentPartLifecy
                 }
             }
             childFragment === mLocalSearchedVideosFragment -> {
-                mLocalVideoListFragment.presenter
-                        .removeOnVideoItemsLoadListener(childFragment.presenter)
+                childFragment.presenter?.let {
+                    mLocalVideoListFragment.presenter?.removeOnVideoItemsLoadListener(it)
+                }
                 mLocalSearchedVideosFragment = null
                 mSwipeRefreshLayout.setOnRefreshListener(mLocalVideoListFragment)
 
@@ -216,7 +221,7 @@ class LocalVideosFragment : Fragment(), ILocalVideosFragment, FragmentPartLifecy
 
     override fun goToLocalSearchedVideosFragment() {
         mLocalSearchedVideosFragment = LocalSearchedVideosFragment()
-        mLocalVideoListFragment.presenter.setArgsForLocalSearchedVideosFragment(
+        mLocalVideoListFragment.presenter?.setArgsForLocalSearchedVideosFragment(
                 mLocalSearchedVideosFragment!!)
         mLocalSearchedVideosFragment!!.setTargetFragment(
                 mLocalVideoListFragment, REQUEST_CODE_LOCAL_SEARCHED_VIDEOS_FRAGMENT)
diff --git a/app/src/main/java/com/liuzhenlin/videos/view/fragment/VideoMoveFragment.kt b/app/src/main/java/com/liuzhenlin/videos/view/fragment/VideoMoveFragment.kt
index e8593f3..5bb6acf 100644
--- a/app/src/main/java/com/liuzhenlin/videos/view/fragment/VideoMoveFragment.kt
+++ b/app/src/main/java/com/liuzhenlin/videos/view/fragment/VideoMoveFragment.kt
@@ -35,6 +35,7 @@ import com.liuzhenlin.videos.bean.Video
 import com.liuzhenlin.videos.bean.VideoDirectory
 import com.liuzhenlin.videos.contextThemedFirst
 import com.liuzhenlin.videos.presenter.IVideoMovePresenter
+import com.liuzhenlin.videos.presenter.Presenter
 import com.liuzhenlin.videos.utils.VideoUtils2
 import com.liuzhenlin.videos.videoCount
 import com.liuzhenlin.videos.view.IView
@@ -74,32 +75,33 @@ class VideoMoveFragment : FullscreenDialogFragment<IVideoMovePresenter>(R.layout
 
     private var mVideoMovingDialog: Dialog? = null
 
-    private val mPresenter = IVideoMovePresenter.newInstance()
+    private var mPresenter: IVideoMovePresenter? = null
 
     init {
         lifecycle.addObserver(object : DefaultLifecycleObserver {
             override fun onStart(owner: LifecycleOwner) =
-                    mPresenter.onViewStart(this@VideoMoveFragment)
+                    mPresenter?.onViewStart(this@VideoMoveFragment) ?: Unit
 
             override fun onResume(owner: LifecycleOwner) =
-                    mPresenter.onViewResume(this@VideoMoveFragment)
+                    mPresenter?.onViewResume(this@VideoMoveFragment) ?: Unit
 
             override fun onPause(owner: LifecycleOwner) =
-                    mPresenter.onViewPaused(this@VideoMoveFragment)
+                    mPresenter?.onViewPaused(this@VideoMoveFragment) ?: Unit
 
             override fun onStop(owner: LifecycleOwner) =
-                    mPresenter.onViewStopped(this@VideoMoveFragment)
+                    mPresenter?.onViewStopped(this@VideoMoveFragment) ?: Unit
         })
     }
 
     override fun onAttach(context: Context) {
         super.onAttach(context)
-        mPresenter.attachToView(this)
+        mPresenter = Presenter.Provider(this).get(IVideoMovePresenter.getImplClass())
+        mPresenter?.attachToView(this)
     }
 
     override fun onDetach() {
         super.onDetach()
-        mPresenter.detachFromView(this)
+        mPresenter?.detachFromView(this)
     }
 
     override fun onScreenWidthDpLevelChanged(
@@ -110,7 +112,7 @@ class VideoMoveFragment : FullscreenDialogFragment<IVideoMovePresenter>(R.layout
 
     override fun onDialogCreated(dialog: Dialog) {
         super.onDialogCreated(dialog)
-        mPresenter.onViewCreated(this)
+        mPresenter?.onViewCreated(this)
     }
 
     override fun init(adapter: TargetDirListAdapter, videoQuantity: Int) {
@@ -137,18 +139,18 @@ class VideoMoveFragment : FullscreenDialogFragment<IVideoMovePresenter>(R.layout
 
     override fun onRestoreInstanceState(savedInstanceState: Bundle?) {
         super.onRestoreInstanceState(savedInstanceState)
-        mPresenter.restoreInstanceState(savedInstanceState)
+        mPresenter?.restoreInstanceState(savedInstanceState)
     }
 
     override fun onSaveInstanceState(outState: Bundle) {
         super.onSaveInstanceState(outState)
-        mPresenter.saveInstanceState(outState)
+        mPresenter?.saveInstanceState(outState)
     }
 
     override fun onDismiss(dialog: DialogInterface) {
         super.onDismiss(dialog)
         mVideoMovingDialog?.dismiss()
-        mPresenter.onViewDestroyed(this)
+        mPresenter?.onViewDestroyed(this)
         mVideoDirList = null
         mTitleText = null
         mOkayButton = null
@@ -156,7 +158,7 @@ class VideoMoveFragment : FullscreenDialogFragment<IVideoMovePresenter>(R.layout
 
     override fun onClick(v: View) {
         when (v.id) {
-            R.id.btn_ok -> mPresenter.moveVideosToCheckedDir()
+            R.id.btn_ok -> mPresenter?.moveVideosToCheckedDir()
             R.id.btn_cancel -> dismiss()
 
             R.id.btn_ok_vmpd -> {
@@ -164,7 +166,7 @@ class VideoMoveFragment : FullscreenDialogFragment<IVideoMovePresenter>(R.layout
                 val checkbox = promptDialog.findViewById<CheckBox>(R.id.checkbox)
                 val neverPromptAgain = checkbox!!.isChecked
                 promptDialog.cancel()
-                mPresenter.onVideoMovePromptConfirmed(neverPromptAgain)
+                mPresenter?.onVideoMovePromptConfirmed(neverPromptAgain)
             }
             R.id.btn_cancel_vmpd -> {
                 val promptDialog = v.tag as AppCompatDialog
@@ -279,7 +281,7 @@ class VideoMoveFragment : FullscreenDialogFragment<IVideoMovePresenter>(R.layout
 
         override fun onClick(v: View) {
             val position = v.tag as Int
-            mPresenter.toggleTargetDirChecked(position)
+            mPresenter?.toggleTargetDirChecked(position)
         }
     }
 }
\ No newline at end of file
-- 
2.47.0.windows.1

